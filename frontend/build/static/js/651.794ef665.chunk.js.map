{"version":3,"file":"static/js/651.794ef665.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Col.js","jsx/pages/Login.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {\r\n  loadingToggleAction,\r\n  loginAction,\r\n} from \"../../store/actions/AuthActions\";\r\n\r\nimport loginbg from \"../../images/bg-1.jpg\";\r\nimport BJSLogo from \"../../images/BJSLogo.png\";\r\n\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"super@admin.com\");\r\n\r\n  let errorsObj = { email: \"\", password: \"\" };\r\n  const [errors, setErrors] = useState(errorsObj);\r\n\r\n  const [password, setPassword] = useState(\"admin\");\r\n  const [userType, setUserType] = useState(\"user\");\r\n\r\n  // const [highlight, setHighlight] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  function onLogin(e) {\r\n    e.preventDefault();\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n    if (email === \"\") {\r\n      errorObj.email = \"Email is Required\";\r\n      error = true;\r\n    }\r\n    if (password === \"\") {\r\n      errorObj.password = \"Password is Required\";\r\n      error = true;\r\n    }\r\n    setErrors(errorObj);\r\n    if (error) {\r\n      return;\r\n    }\r\n    dispatch(loadingToggleAction(true));\r\n    dispatch(loginAction(userType, email, password, props.history));\r\n  }\r\n\r\n  //css for button\r\n  const right = {\r\n    float: \"right\",\r\n  };\r\n\r\n  function handleKeyPress(e) {\r\n    var key = e.key;\r\n    if (key == key) {\r\n      setErrors(errorsObj == false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"login-main-page\"\r\n      style={{\r\n        backgroundImage: \"url(\" + loginbg + \")\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"container h-100\">\r\n          <div className=\"row h-100 align-items-center justify-contain-center\">\r\n            <div className=\"col-xl-12 mt-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body p-0\">\r\n                  <div className=\"row m-0\">\r\n                    <div className=\"col-xl-6 col-md-6 sign text-center\">\r\n                      <div>\r\n                        <div\r\n                          className=\"text-center my-5\"\r\n                          Style=\"margin-top:15% !important\"\r\n                        >\r\n                          <img width=\"400\" src={BJSLogo} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-md-6 m-auto\">\r\n                      <div className=\"sign-in-your\">\r\n                        <Row className=\"mb-4\">\r\n                          <span className=\"fs-22 font-w600 text-black text-center\">\r\n                            Log In To Your Account\r\n                          </span>\r\n                        </Row>\r\n                        <div className=\"login-social\"></div>\r\n                        {props.errorMessage && (\r\n                          <div className=\"bg-red-600 text-red-900 border border-red-900 p-1 my-2\">\r\n                            {props.errorMessage}\r\n                          </div>\r\n                        )}\r\n                        {props.successMessage && (\r\n                          <div className=\"bg-green-300 text-green-900 border border-green-900 p-1 my-2\">\r\n                            {props.successMessage}\r\n                          </div>\r\n                        )}\r\n                        <form onSubmit={onLogin}>\r\n                          {/* <div className=\"mb-3\">\r\n                            <label className=\"mb-1\">\r\n                              <strong>Select User Type</strong>\r\n                            </label>\r\n\r\n                            <select\r\n                              onChange={(e) => setUserType(e.target.value)}\r\n                              value={userType}\r\n                              className=\"form-control\">\r\n                              <option value=\"super_admin\">Super Admin</option>\r\n                              <option value=\"company\">Company</option>\r\n                              <option value=\"instructor\">Instructor</option>\r\n                              <option value=\"user\">User</option>\r\n                            </select>\r\n                            {errors.userType && (\r\n                              <div className=\"text-danger fs-12\">\r\n                                {errors.userType}\r\n                              </div>\r\n                            )}\r\n                          </div> */}\r\n\r\n                          <div className=\"mb-3\">\r\n                            <label className=\"mb-1\">\r\n                              <strong>Email</strong>\r\n                            </label>\r\n                            <input\r\n                              type=\"email\"\r\n                              className=\"form-control\"\r\n                              value={email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                              onKeyPress={(e) => handleKeyPress(e)}\r\n                              // style={{border: highlight}}\r\n                            />\r\n                            {errors.email && (\r\n                              <div Style=\"color:red;font-weight:400\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mb-3\">\r\n                            <label className=\"mb-1\">\r\n                              <strong>Password</strong>\r\n                            </label>\r\n                            <input\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              value={password}\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                              onKeyPress={(e) => handleKeyPress(e)}\r\n                            />\r\n                            {errors.password && (\r\n                              <div Style=\"color:red;font-weight:400\">\r\n                                {errors.password}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"row d-flex justify-content-between mt-4 mb-2\">\r\n                            <div className=\"mb-3\">\r\n                              <div className=\"form-check custom-checkbox ms-1\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  id=\"basic_checkbox_1\"\r\n                                />\r\n                                <label\r\n                                  className=\"form-check-label\"\r\n                                  htmlFor=\"basic_checkbox_1\"\r\n                                >\r\n                                  Remember my preference\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"mb-3\">\r\n                                    <Link\r\n                                      to=\"./page-register\"\r\n                                      className=\"text-primary\"\r\n                                    >\r\n                                      Sign up\r\n                                    </Link>\r\n                                  </div>\r\n                                </Col>\r\n                                <Col>\r\n                                  <Link\r\n                                    to=\"./forgot-password\"\r\n                                    className=\"text-primary\"\r\n                                    style={right}\r\n                                  >\r\n                                    Forgot password\r\n                                  </Link>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-center\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary btn-block\"\r\n                            >\r\n                              Log In\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["Col","React","props","ref","as","bsPrefix","className","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","classNames","useCol","colProps","Component","_jsx","length","displayName","connect","state","errorMessage","auth","successMessage","showLoading","useState","email","setEmail","errorsObj","password","errors","setErrors","setPassword","userType","dispatch","useDispatch","handleKeyPress","e","key","style","backgroundImage","loginbg","backgroundSize","Style","width","src","BJSLogo","alt","Row","onSubmit","preventDefault","error","errorObj","loadingToggleAction","loginAction","history","type","value","onChange","target","onKeyPress","id","htmlFor","to","float","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}