{"version":3,"file":"static/js/405.44460b7d.chunk.js","mappings":"8QA8JA,UA/IuB,SAAC,GAAgB,EAAdA,QAAe,IACvC,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAEIC,EAAY,CAAGF,MAAO,IAC1B,GAA4BD,EAAAA,EAAAA,UAASG,GAArC,eAAOC,EAAP,KAAeC,EAAf,MACiBC,EAAAA,EAAAA,MAmBjB,IAAMC,EAAyB,yCAAG,WAAOC,GAAP,mFAEhCA,EAAEC,iBAEEC,GAAQ,EACNC,GAL0B,UAKVR,GAER,KAAVF,IACAU,EAASV,MAAQ,oBACjBS,GAAQ,GAGZL,EAAUM,IACND,EAb4B,iEAgBTE,EAAc,CACnCX,MAAAA,IAjB8B,OAqB5B,WALEY,EAhB0B,SAqBe,GAAnBA,EAASC,OACnCC,IAAK,UAAWF,EAASG,QAAS,UAAW,CAC3CC,SAAS,EACTC,MAAO,MACNC,MAAK,SAACC,GACPC,OAAOC,SAASC,KAAO,YAGzBR,IAAK,SAAUF,EAASG,QAAS,SA7BH,4CAAH,sDAxBO,SAyDvBJ,EAzDuB,gFAyDtC,WAA6BX,GAA7B,+FACSuB,MAAM,GAAD,OAAIC,EAAAA,GAAJ,yBAAyC,CACnDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU7B,KACpBkB,MAAK,SAACY,GAAD,OAAUA,EAAKC,WAPzB,2CAzDsC,wBA4EtC,OACE,gBAAKC,UAAU,8BAA8BC,MAAO,CACrDC,gBAAiB,OAASC,EAAU,IACpCC,eAAgB,SAFf,UAMI,gBAAKJ,UAAU,kBAAf,UACE,gBAAKA,UAAU,sDAAf,UACA,gBAAKA,UAAU,sDAAf,UACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,uBAAf,UACE,gBAAKA,UAAU,iBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,YAAf,WACE,gBAAKA,UAAU,mBAAf,UACI,gBAAKK,MAAM,MAAMC,IAAKC,EAASC,IAAI,WAEvC,eAAIR,UAAU,0DAAd,8BACA,kBAAMS,SAAU,SAAClC,GAAD,OAAOD,EAA0BC,IAAjD,WAEA,iBAAKyB,UAAU,mBAAf,WACI,kBAAOA,UAAU,GAAjB,UACE,yCAEF,kBACEU,KAAK,QACLV,UAAU,eACVW,aAAa,GACbC,SAAU,SAACrC,GAAD,OAAKN,EAASM,EAAEsC,OAAO1B,QACjC2B,WAAY,SAACvC,GAAD,OArCvC,SAAwBA,GACvB,IAAIwC,EAAMxC,EAAEwC,IACNA,GAAOA,GACZ3C,EAAwB,GAAbF,GAkCiC8C,CAAezC,MAEnCJ,EAAOH,QAAU,gBAAKiD,MAAM,4BAAX,SAAwC9C,EAAOH,YAGnE,gBAAKgC,UAAU,oBAAf,UACE,mBAEEU,KAAK,SACLV,UAAU,4BAHZ,uBASF,gBAAKA,UAAU,mBAAf,UACb,eAAGA,UAAU,GAAb,6BACmB,KAClB,SAAC,KAAD,CAAMA,UAAU,eAAekB,GAAG,SAAlC","sources":["jsx/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState }from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport {\r\n  loadingToggleAction,\r\n  forgotAction,\r\n} from \"../../store/actions/AuthActions\";\r\n// image\r\n\r\nimport swal from 'sweetalert';\r\nimport BJSLogo from \"../../images/BJSLogo.png\";\r\nimport loginbg from \"../../images/bg-1.jpg\";\r\n\r\nimport { API_ROOT_URL } from \"../constants\";\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const [email, setEmail] = useState();\r\n\r\n  let errorsObj = {  email: '' };\r\n  const [errors, setErrors] = useState(errorsObj);\r\n  const dispatch = useDispatch();\r\n  \r\n  function onForgot(e) {\r\n    e.preventDefault();\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n\r\n    if (email === \"\") {\r\n        errorObj.email = 'Email is Required';\r\n        error = true;\r\n    }\r\n\r\n    setErrors(errorObj);\r\n    if (error) return;\r\n\r\n    // dispatch(loadingToggleAction(true));\r\n    // dispatch(forgotAction(email));\r\n}\r\n\r\n  const handleResetPasswordSubmit = async (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n\r\n    if (email === \"\") {\r\n        errorObj.email = 'Email is Required';\r\n        error = true;\r\n    }\r\n\r\n    setErrors(errorObj);\r\n    if (error) return;\r\n\r\n\r\n    const response = await resetPassword({\r\n      email,\r\n    });\r\n    \r\n  \r\n    if (\"status\" in response && response.status == true) {\r\n      swal(\"Success\", response.message, \"success\", {\r\n        buttons: false,\r\n        timer: 2000,\r\n      }).then((value) => {\r\n        window.location.href = \"/login\";\r\n      });\r\n    } else {\r\n      swal(\"Failed\", response.message, \"error\");\r\n    }\r\n  };\r\n\r\n  async function resetPassword(email) {\r\n    return fetch(`${API_ROOT_URL}/users/reset-password`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(email),\r\n    }).then((data) => data.json());\r\n\r\n  }\r\n\r\n  \r\n\tfunction handleKeyPress(e) {\r\n\t\tvar key = e.key;\r\n\t   if (key == key) {\r\n\t\t\tsetErrors((errorsObj == false))\r\n\t\t}\r\n\t}\r\n  \r\n  return (\r\n    <div className=\"authincation h-100 p-meddle\" style={{\r\n\t\t\tbackgroundImage: \"url(\" + loginbg + \")\",\r\n\t\t\tbackgroundSize: \"cover\",\r\n\t\t  }}\r\n      >\r\n      \r\n        <div className=\"container h-100\">\r\n          <div className=\"row h-100 align-items-center justify-contain-center\">\r\n          <div className=\"row justify-content-center h-100 align-items-center\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"authincation-content\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-xl-12\">\r\n                    <div className=\"auth-form\">\r\n                      <div className=\"text-center mb-3\">\r\n                          <img width=\"600\" src={BJSLogo} alt=\"BJS\" />\r\n                      </div>\r\n                      <h4 className=\"text-center mb-4 fs-26 font-w600 text-black text-center\">Forgot Password</h4>\r\n                      <form onSubmit={(e) => handleResetPasswordSubmit(e)}>\r\n                        \r\n                      <div className=\"form-group  mb-4\">\r\n                          <label className=\"\">\r\n                            <strong>Email</strong>\r\n                          </label>\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            defaultValue=\"\"\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                            onKeyPress={(e) => handleKeyPress(e)}\r\n                          />\r\n                          {errors.email && (<div Style=\"color:red;font-weight:400\">{errors.email}</div>)}\r\n                        </div>\r\n\r\n                        <div className=\"text-center  mb-4\">\r\n                          <button \r\n                          \r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n      \r\n                        </div>\r\n                        <div className=\"new-account mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t Go back to your {\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"text-primary\" to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLogin Section\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"names":["history","useState","email","setEmail","errorsObj","errors","setErrors","useDispatch","handleResetPasswordSubmit","e","preventDefault","error","errorObj","resetPassword","response","status","swal","message","buttons","timer","then","value","window","location","href","fetch","API_ROOT_URL","method","headers","body","JSON","stringify","data","json","className","style","backgroundImage","loginbg","backgroundSize","width","src","BJSLogo","alt","onSubmit","type","defaultValue","onChange","target","onKeyPress","key","handleKeyPress","Style","to"],"sourceRoot":""}